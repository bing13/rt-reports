#!/usr/bin/python
##########################################
# native_binner_Model_1.py
#
# 2/2/2015
#
# read in an RT dump file, and generate a "binner" plot
#   that is comparable to the onces generated by hand in excel
#
######################################################

import pandas as pd;
import numpy as np;
import matplotlib.pyplot as plt;
import datetime;

inx = 'c:\\Users\\bhecker\\My Documents\\INSPIRE\\RT metrics\\2014-12-08 analyses\\2014-12-08_RT_dump_results.tsv'

EntireSheet=pd.read_csv(inx, 'RT-2014-12-08_19-59-40_all_manu', delimiter='\t', index_col=None, na_values=['NA'] )

e2 = EntireSheet.set_index('QueueName')
fbkDF = e2.loc['Feedback']
print len(fbkDF)
#f2 = fbkDF.set_index('id')

## I didn't see a way to extract the ID column if it was the index
f3 = fbkDF.reset_index()
idKeys = f3['id']
print "idKeys:", idKeys.tail()

BIN_START_EPOCH = pd.datetime(2013, 5, 1)  ## modern epoch
#rng = pd.date_range('1/1/2006', periods=52*10, freq='w')
rng = pd.date_range(start=BIN_START_EPOCH, end=datetime.date.today(), freq='w')
tsbin = pd.Series(0, index=rng)
print "tsbin:", tsbin.head()
f3 = f3.set_index('id')

for k in idKeys:
    c = f3.loc[k]['Created']
    y, m, d = c[:10].split('-')
    c = pd.datetime(int(y),int(m),int(d) ) 
    r = f3.loc[k]['Resolved'] 
    if r == "Not set": 
        r = pd.datetime(2020, 12, 31)
    else:
        y, m, d = r[:10].split('-')
        r = pd.datetime(int(y), int(m), int(d) )

    for beginBin in tsbin.index:
        ## bin is an entire week -- careful comparison
        ## ticket starts before or equal to "endBin" date, 
        ## and ends on or after the beginBin date. 
        
        if c <= beginBin+datetime.timedelta(days=6) and r >= beginBin:
            tsbin.loc[beginBin] += 1

print "tsbin tail/head", tsbin.head(), tsbin.tail()

## plot ##############

get_ipython().magic(u'matplotlib inline')
print plt.matplotlib.rcParams['backend']
plt.figure();

plt.ylabel("number of tickets"); 
plt.title("Feedback Queue Size")
tsbin.plot(kind='line')
